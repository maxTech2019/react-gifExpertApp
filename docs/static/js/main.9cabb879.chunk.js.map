{"version":3,"sources":["Componentes/AddCategoria.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategoria","useState","inputvalue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","input","value","onChange","target","getGifs","pCategoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","Categoria","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAe,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAa,SAAAS,GAAG,OAAIP,GAAJ,mBAAmBO,OACnCN,EAAc,OAMhB,2BACIO,MAAM,OACNC,MAAQT,EACRU,SAlBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAYZM,GAZY,4CAAH,sDCCXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,KCJJO,EAAU,SAAC,GAAkB,IAAjBnB,EAAgB,EAAhBA,WAAgB,ECDb,SAACoB,GAAc,IAAD,EACZlC,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNzB,EAAQqB,GACPK,MAAK,SAAAf,GACFa,EAAS,CACDhB,KAAMG,EACNW,SAAS,SAGvB,CAAED,IAEGE,EDX0BI,CAAc1B,GAAlCa,EAJwB,EAI7BN,KAAac,EAJgB,EAIhBA,QAErB,OACI,oCACK,wBAAIL,UAAU,qCAAd,IAAqDhB,EAArD,KAIEqB,GAAW,uBAAGL,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAERH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEnBnBkB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,aAFd,mBAEvB2C,EAFuB,KAEZ5C,EAFY,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAcA,aAAcA,IAC5B,6BACA,4BAEQ4C,EAAUpB,KAAK,SAAAf,GAAG,OACd,kBAAC,EAAD,CACIiC,IAAKjC,EACLM,WAAYN,UCZxCoC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.9cabb879.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategoria = ({setCategoria}) => {\r\n    \r\n    const [inputvalue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n        if(inputvalue.trim().length > 1)\r\n        {\r\n            setCategoria(cat =>[inputvalue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSumit}>\r\n          <input \r\n              input='text'\r\n              value ={inputvalue}\r\n              onChange={handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async (pCategoria) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(pCategoria)}&limit=10&api_key=S7QXL6iLyqxHesWbzqsZNa9sMhzHmSZU`;\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n            return {\r\n                id : img.id,\r\n                title : img.title,\r\n                url : img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return(gifs);\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={ url } alt={ title }></img>\r\n           <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({pCategoria}) => {\r\n\r\n    //renombramos la desestructuración con el operador \":\"\r\n\r\n    const { data:images, loading } = useFetchGifs (pCategoria);\r\n    \r\n    return (\r\n        <>\r\n             <h3 className=\"animate__animated animate__fadeIn\"> { pCategoria } </h3>\r\n\r\n            {/* Si loading es true se presenta el <p> */}\r\n\r\n             { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n             <div className=\"card-grid\">\r\n                {\r\n                    images.map ((img) => \r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />          \r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (Categoria) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(Categoria)\r\n        .then(img => {\r\n            setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n        }); \r\n    },[ Categoria ])\r\n\r\n    return state;\r\n}\r\n\r\n/*El custom hook es el que tiene el trabajo pesado:\r\nA. recibe como parametro la categoria y posee un useState \"estado\" que con un parametro de\r\n   inicialización un objeto con 2 atributos: arreglo data vacio y loading con true.\r\n\r\nB. useEffect, ejecutara solo cuando cambie la Categoria, cuando ejecuta llama al helper\r\n   getGifs, este hace la petición HTTP enviando categoria como parametro, recibe \r\n   una promesa con .then(img => ...), recibimos las imagenes, ubicamos un setTimeout \r\n   hacer + lento 3 milisegundos una vez tengamos la data llamanos al setState para\r\n   cambiar la información, en el arreglo data cargamos las imagenes y en\r\n   la variable loading cagamos false. \r\n   \r\nC. El custom hook retorna un state que provocara una renderización al componente\r\n   GifGrid desde donde lo estan llamando.\r\n\r\n */","import React, { useState } from \"react\";\r\nimport { AddCategoria } from \"./Componentes/AddCategoria\";\r\nimport { GifGrid } from \"./Componentes/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categoria, setCategoria] = useState(['One Puch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategoria setCategoria={setCategoria}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categoria.map (cat => (\r\n                        <GifGrid \r\n                            key={cat}\r\n                            pCategoria={cat}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}